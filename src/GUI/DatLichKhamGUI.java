/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.BenhNhanBUS;
import static BUS.BenhNhanBUS.generateMaBenhNhan;
import BUS.LichHenBUS;
import static BUS.LichLamViecBUS.hasScheduleConflict;
import BUS.NhaSiBUS;
import BUS.NhanVienBUS;
import BUS.ThuocBUS;
import DTO.BenhNhanDTO;
import DTO.LichHenDTO;
import DTO.NhaSiDTO;

import DTO.NhanVienDTO;
import DTO.ThuocDTO;
import Utils.DangNhapUtils;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.regex.PatternSyntaxException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class DatLichKhamGUI extends javax.swing.JPanel {

    /**
     * Creates new form NhanVienGUI
     */
    public DatLichKhamGUI() {
        initComponents();
        loadDataToTable();
        loadNhaSi();
        sapXep();
        phanQuyen();
        
    }
       public void phanQuyen() {
        if ("NhaSi" == DangNhapUtils.loaiTaiKhoan) {
           btnThem.setEnabled(false);
           btnXoa.setEnabled(false);
        }
    }
    public void sapXep(){
    txtLoc.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                applyFilter();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                applyFilter();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                applyFilter();
            }
        });
    cboLoc.addActionListener(e -> applyFilter());
    }

private void loadNhaSi() {
    DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
    cboNhaSi.setModel(comboBoxModel); // Set the model for the JComboBox

    // Load danh sách thuốc into the JComboBox
    List<NhaSiDTO> nhaSiDTO = NhaSiBUS.layDanhSachNhaSi();
    for (NhaSiDTO nhasi : nhaSiDTO) {
        comboBoxModel.addElement(nhasi.getMaNhaSi() + "-" + nhasi.getTenNhaSi()); // Add each drug's name to the JComboBox
    }
}
 private void applyFilter() {
        String filterText = txtLoc.getText();
        int filterColumnIndex = cboLoc.getSelectedIndex();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>((DefaultTableModel) tableLichHen.getModel());

        try {
            // Set the filter to case-insensitive and partial matching
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + filterText, filterColumnIndex));
            tableLichHen.setRowSorter(sorter);
        } catch (PatternSyntaxException ex) {
            // If the filter text has an invalid regex syntax, do nothing
        }
    }
    private void loadDataToTable() {
         DefaultTableModel model = (DefaultTableModel) tableLichHen.getModel();
        model.setRowCount(0); // Clear existing data from the table
        model.setColumnCount(0);
        model.addColumn("Mã lịch hẹn");
        model.addColumn("Thời gian hẹn");
        model.addColumn("Mã bệnh nhân");
        model.addColumn("Tên bệnh nhân");
        model.addColumn("Ma nha sĩ");
        model.addColumn("Tên nha sĩ");
        model.addColumn("Phòng khám");
        model.addColumn("Tình trạng");
        List<LichHenDTO> lichHenDTO = LichHenBUS.layDanhSachLichHen();

        for (LichHenDTO nhaSi : lichHenDTO) {
            Object[] rowData = {nhaSi.getMaLichHen(), nhaSi.getThoiGianHen(), nhaSi.getMaBenhNhan(), nhaSi.getTenBenhNhan(), nhaSi.getMaNhaSi(), nhaSi.getTenNhaSi(), nhaSi.getPhongKham(), nhaSi.getTinhTrang()};
            model.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableLichHen = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtMaLichHen = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPhongKham = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cboNhaSi = new javax.swing.JComboBox<>();
        dateChooserThoiGianHen = new com.toedter.calendar.JDateChooser();
        txtTinhTrang = new javax.swing.JTextField();
        txtLoc = new javax.swing.JTextField();
        cboLoc = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtTenBenhNhan = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(1366, 760));

        tableLichHen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã lịch hẹn", "Thời gian hẹn", "Mã bệnh nhân", "Mã nha sĩ", "Phòng khám", "Tình trạng"
            }
        ));
        tableLichHen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableLichHenMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableLichHen);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel1.setText("Mã lịch hẹn:");

        jLabel2.setText("Thời gian hẹn:");

        jLabel3.setText("Tên bệnh nhân:");

        jLabel4.setText("Nha sĩ:");

        jLabel5.setText("Phòng khám:");

        jLabel6.setText("Tình trạng:");

        cboNhaSi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Khác" }));

        cboLoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã lịch hẹn", "Thời gian hẹn", "Mã bệnh nhân", "Tên bệnh nhân", "Mã nha sĩ", "Tên nha sĩ", "Phòng khám", "Tình trạng" }));

        jLabel7.setText("Lọc theo:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtPhongKham, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtTenBenhNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaLichHen, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboNhaSi, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateChooserThoiGianHen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(111, 111, 111)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThem)
                    .addComponent(btnXoa))
                .addGap(151, 151, 151))
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(757, 757, 757)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(cboLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtMaLichHen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTenBenhNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtPhongKham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(btnThem))
                            .addComponent(dateChooserThoiGianHen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cboNhaSi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(btnXoa)
                            .addComponent(txtTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(106, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

 
         String maBenhNhan = generateMaBenhNhan();
String tenBenhNhan = txtTenBenhNhan.getText();
    // Gather appointment details from the form inputs
    Date thoiGianHenDate = dateChooserThoiGianHen.getDate();
    String phongKham = txtPhongKham.getText();
    String tinhTrang = txtTinhTrang.getText();
    String maNhaSi = (String) cboNhaSi.getSelectedItem();

    // Convert the appointment date to SQL date
    java.sql.Date sqlThoiGianHen = new java.sql.Date(thoiGianHenDate.getTime());
       // Check for schedule conflict
        if (!hasScheduleConflict(maNhaSi, sqlThoiGianHen)) {
            // Show a message if the doctor doesn't have a schedule
            JOptionPane.showMessageDialog(DatLichKhamGUI.this, "Nha sĩ không có lịch khám vào ngày này.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return; // Stop further processing
        }
    // Create an appointment DTO
    LichHenDTO lichHenDTO = new LichHenDTO(sqlThoiGianHen, maBenhNhan, maNhaSi, phongKham, tinhTrang);

    // Add the patient and schedule the appointment
    if (BenhNhanBUS.themBenhNhan(new BenhNhanDTO(maBenhNhan, tenBenhNhan, 0, "Khác", "")) && LichHenBUS.themLichHen(lichHenDTO)) {
        JOptionPane.showMessageDialog(this, "Thêm lịch hẹn thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        // Thêm thành công, cập nhật lại dữ liệu trong JTable hoặc làm gì đó khác (nếu cần)
        loadDataToTable();
    } else {
        JOptionPane.showMessageDialog(this, "Thêm lịch hẹn thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        // Thêm thất bại, hiển thị thông báo lỗi hoặc xử lý lỗi (nếu cần)
    }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        // Kiểm tra xem có hàng nào được chọn không
        int selectedRow = tableLichHen.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn lịch hẹn cần xóa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Lấy dữ liệu từ hàng nhà sĩ được chọn
        DefaultTableModel model = (DefaultTableModel) tableLichHen.getModel();
        String maNhanVien = model.getValueAt(selectedRow, 0).toString(); // Giả sử cột MaNhanVien ở cột đầu tiên

        // Hiển thị hộp thoại xác nhận xóa nhà sĩ
        int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa lịch hẹn này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            // Nếu người dùng chọn Yes, thực hiện xóa nhà sĩ từ CSDL
            boolean isXoaNhanVienSuccess = LichHenBUS.xoaLichHen(maNhanVien);

            if (isXoaNhanVienSuccess) {
                // Nếu xóa thành công, cập nhật lại dữ liệu trong JTable
                model.removeRow(selectedRow);
                JOptionPane.showMessageDialog(this, "Xóa lịch hẹn thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                loadDataToTable();
            } else {
                // Nếu xóa thất bại, hiển thị thông báo lỗi
                JOptionPane.showMessageDialog(this, "Xóa lịch hẹn thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_btnXoaActionPerformed
    }
    private void tableLichHenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableLichHenMouseClicked
        // TODO add your handling code here:
        // Lấy chỉ số hàng được chọn
        int selectedRow = tableLichHen.getSelectedRow();

        // Kiểm tra nếu có hàng được chọn
        if (selectedRow >= 0) {
            // Lấy giá trị từ các cột của hàng được chọn
            String maLichHen = tableLichHen.getValueAt(selectedRow, 0).toString();
            String thoiGianHen = tableLichHen.getValueAt(selectedRow, 1).toString();
            String maBenhNhan = tableLichHen.getValueAt(selectedRow, 3).toString();
            String maNhaSi = tableLichHen.getValueAt(selectedRow, 4).toString() + "-" + tableLichHen.getValueAt(selectedRow, 5).toString();
            String phongKham = tableLichHen.getValueAt(selectedRow, 6).toString();
            String tinhTrang = tableLichHen.getValueAt(selectedRow, 7).toString();
            // Điền dữ liệu vào các trường tương ứng
            txtMaLichHen.setText(maLichHen);
            txtTenBenhNhan.setText(maBenhNhan);
            cboNhaSi.setSelectedItem(maNhaSi);
            txtPhongKham.setText(phongKham);
            txtTinhTrang.setText(tinhTrang);
// Định dạng ngày từ chuỗi
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date date;
            try {
                date = dateFormat.parse(thoiGianHen);
            } catch (ParseException e) {
                e.printStackTrace();
                return; // Xử lý lỗi nếu có thể
            }

// Chuyển đổi thành java.sql.Date
            java.sql.Date sqlDate = new java.sql.Date(date.getTime());

// Thiết lập ngày cho dateChooserThoiGianHen
            dateChooserThoiGianHen.setDate(date);

        }
    }//GEN-LAST:event_tableLichHenMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboLoc;
    private javax.swing.JComboBox<String> cboNhaSi;
    private com.toedter.calendar.JDateChooser dateChooserThoiGianHen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableLichHen;
    private javax.swing.JTextField txtLoc;
    private javax.swing.JTextField txtMaLichHen;
    private javax.swing.JTextField txtPhongKham;
    private javax.swing.JTextField txtTenBenhNhan;
    private javax.swing.JTextField txtTinhTrang;
    // End of variables declaration//GEN-END:variables
}
