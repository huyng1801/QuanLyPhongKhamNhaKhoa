/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.ThuocBUS;

import DTO.ThuocDTO;
import Utils.DangNhapUtils;
import java.math.BigDecimal;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ThuocGUI extends javax.swing.JPanel {

    /**
     * Creates new form ThuocGUI
     */
    public ThuocGUI() {
        initComponents();
        loadDataToTable();
        phanQuyen();
    }

    public void phanQuyen() {
        if (!"QuanTriVien".equals(DangNhapUtils.loaiTaiKhoan)) {
           btnThem.setEnabled(false);
           btnSua.setEnabled(false);
           btnXoa.setEnabled(false);
        }
    }

    private void loadDataToTable() {
        DefaultTableModel model = (DefaultTableModel) tableThuoc.getModel();
        model.setRowCount(0); // Clear existing data from the table
        model.setColumnCount(0);
        model.addColumn("Mã thuốc");
        model.addColumn("Tên thuốc");
        model.addColumn("Đơn vị tính");
        model.addColumn("Đơn giá");
        List<ThuocDTO> danhSachThuoc = ThuocBUS.layDanhSachThuoc();

        for (ThuocDTO nhaSi : danhSachThuoc) {
            Object[] rowData = {nhaSi.getMaThuoc(), nhaSi.getTenThuoc(), nhaSi.getDonViTinh(), nhaSi.getDonGia()};
            model.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableThuoc = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtThuoc = new javax.swing.JTextField();
        txtTenThuoc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDonViTinh = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(1366, 760));

        tableThuoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableThuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableThuocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableThuoc);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel1.setText("Mã thuốc:");

        jLabel2.setText("Tên thuốc:");

        jLabel3.setText("Đơn vị tính:");

        jLabel4.setText("Đơn giá:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(111, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDonViTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTenThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(110, 110, 110)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSua)
                            .addComponent(btnThem)
                            .addComponent(btnXoa))))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtTenThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtDonViTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(33, 33, 33)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String maThuoc = txtThuoc.getText();
        String tenThuoc = txtTenThuoc.getText();
        String donViTinh = txtDonViTinh.getText();
        BigDecimal donGia = new BigDecimal(txtDonGia.getText());
        ThuocDTO thuocDTO = new ThuocDTO(maThuoc, tenThuoc, donViTinh, donGia);
        // Gọi phương thức ThuocBUS.themThuoc(nhaSiDTO) để thêm nhà sĩ vào cơ sở dữ liệu
        if (ThuocBUS.themThuoc(thuocDTO)) {
            JOptionPane.showMessageDialog(this, "Thêm thuốc thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            // Thêm thành công, cập nhật lại dữ liệu trong JTable hoặc làm gì đó khác (nếu cần)
            loadDataToTable();
        } else {
            JOptionPane.showMessageDialog(this, "Thêm thuốc thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            // Thêm thất bại, hiển thị thông báo lỗi hoặc xử lý lỗi (nếu cần)
        }
        // Sau khi thêm thành công, cập nhật lại dữ liệu trong JTable hoặc thông báo thành công cho người dùng
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        // Kiểm tra xem có hàng nào được chọn không
        int selectedRow = tableThuoc.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn thuốc cần xóa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Lấy dữ liệu từ hàng nhà sĩ được chọn
        DefaultTableModel model = (DefaultTableModel) tableThuoc.getModel();
        String maThuoc = model.getValueAt(selectedRow, 0).toString(); // Giả sử cột MaThuoc ở cột đầu tiên

        // Hiển thị hộp thoại xác nhận xóa nhà sĩ
        int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa thuốc này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            // Nếu người dùng chọn Yes, thực hiện xóa nhà sĩ từ CSDL
            boolean isXoaThuocSuccess = ThuocBUS.xoaThuoc(maThuoc);

            if (isXoaThuocSuccess) {
                // Nếu xóa thành công, cập nhật lại dữ liệu trong JTable
                model.removeRow(selectedRow);
                JOptionPane.showMessageDialog(this, "Xóa thuốc thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                loadDataToTable();
            } else {
                // Nếu xóa thất bại, hiển thị thông báo lỗi
                JOptionPane.showMessageDialog(this, "Xóa thuốc thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_btnXoaActionPerformed
    }
    private void tableThuocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableThuocMouseClicked
        // TODO add your handling code here:
        // Lấy chỉ số hàng được chọn
        int selectedRow = tableThuoc.getSelectedRow();

        // Kiểm tra nếu có hàng được chọn
        if (selectedRow >= 0) {
            // Lấy giá trị từ các cột của hàng được chọn
            String maThuoc = tableThuoc.getValueAt(selectedRow, 0).toString();
            String tenThuoc = tableThuoc.getValueAt(selectedRow, 1).toString();
            String donViTinh = tableThuoc.getValueAt(selectedRow, 2).toString();
            String donGia = tableThuoc.getValueAt(selectedRow, 3).toString();

            // Điền dữ liệu vào các trường tương ứng
            txtThuoc.setText(maThuoc);
            txtTenThuoc.setText(tenThuoc);
            txtDonViTinh.setText(donViTinh);
            txtDonGia.setText(donGia);
        }
    }//GEN-LAST:event_tableThuocMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        // Kiểm tra xem có nha sĩ nào được chọn trong bảng hay không
        int selectedRow = tableThuoc.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một thuốc để sửa.");
            return;
        }

        // Lấy thông tin nha sĩ được chọn từ bảng
        String maThuoc = tableThuoc.getValueAt(selectedRow, 0).toString();
        String tenThuoc = txtTenThuoc.getText();;
        String donViTinh = txtDonViTinh.getText();
        BigDecimal donGia = new BigDecimal(txtDonGia.getText());
        ThuocDTO nhaSiDTO = new ThuocDTO(maThuoc, tenThuoc, donViTinh, donGia);
        // Gọi phương thức ThuocBUS.themThuoc(nhaSiDTO) để thêm nhà sĩ vào cơ sở dữ liệu
        if (ThuocBUS.suaThuoc(nhaSiDTO)) {
            JOptionPane.showMessageDialog(this, "Sửa thuốc thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            // Thêm thành công, cập nhật lại dữ liệu trong JTable hoặc làm gì đó khác (nếu cần)
            loadDataToTable();
        } else {
            JOptionPane.showMessageDialog(this, "Sửa thuốc thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            // Thêm thất bại, hiển thị thông báo lỗi hoặc xử lý lỗi (nếu cần)
        }
    }//GEN-LAST:event_btnSuaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableThuoc;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtDonViTinh;
    private javax.swing.JTextField txtTenThuoc;
    private javax.swing.JTextField txtThuoc;
    // End of variables declaration//GEN-END:variables
}
