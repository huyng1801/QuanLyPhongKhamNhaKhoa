/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.BenhNhanBUS;
import BUS.LichHenBUS;
import BUS.LichLamViecBUS;
import BUS.NhaSiBUS;
import BUS.NhanVienBUS;
import BUS.ThuocBUS;
import DTO.BenhNhanDTO;
import DTO.LichHenDTO;
import DTO.LichLamViecDTO;
import DTO.NhaSiDTO;

import DTO.NhanVienDTO;
import DTO.ThuocDTO;
import Utils.DangNhapUtils;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.regex.PatternSyntaxException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class LichLamViecGUI extends javax.swing.JPanel {
   private TableRowSorter<DefaultTableModel> tableRowSorter;
    public LichLamViecGUI() {
        initComponents();
        loadNhaSi();
        loadDataToTable();
        phanQuyen();
    }
       public void phanQuyen() {
        if (!"QuanTriVien".equals(DangNhapUtils.loaiTaiKhoan)) {
           btnThem.setEnabled(false);
           btnXoa.setEnabled(false);
        }
    }
  private void loadDataToTable() {
        DefaultTableModel model = (DefaultTableModel) tableLichLamViec.getModel();
        model.setRowCount(0); // Clear existing data from the table
        model.setColumnCount(0);
        model.addColumn("Mã lịch làm việc");
        model.addColumn("Mã nha sĩ");
        model.addColumn("Ngày làm việc");
        model.addColumn("Tình trạng");
        List<LichLamViecDTO> lichHenDTOList = LichLamViecBUS.layDanhSachLichLamViec();

        for (LichLamViecDTO lichHen : lichHenDTOList) {
            Object[] rowData = {lichHen.getMaLichLamViec(), lichHen.getMaNhaSi(), lichHen.getNgayLamViec(),
                lichHen.getSanSang()};
            model.addRow(rowData);
        }
        tableRowSorter = new TableRowSorter<>(model);
        tableLichLamViec.setRowSorter(tableRowSorter);
    }
 private void loadNhaSi() {
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
        cboMaNhaSi.setModel(comboBoxModel); // Set the model for the JComboBox

        // Load danh sách nhà sĩ into the JComboBox
        List<NhaSiDTO> nhaSiDTOList = NhaSiBUS.layDanhSachNhaSi();
        for (NhaSiDTO nhaSi : nhaSiDTOList) {
            comboBoxModel.addElement(nhaSi.getMaNhaSi()); // Add each doctor's ID to the JComboBox
        }
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableLichLamViec = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtMaLichLamViec = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cboSanSang = new javax.swing.JComboBox<>();
        dateChooserNgayLamViec = new com.toedter.calendar.JDateChooser();
        cboMaNhaSi = new javax.swing.JComboBox<>();
        txtTimKiem = new javax.swing.JTextField();
        comboBoxTimKiem = new javax.swing.JComboBox<>();
        btnTimKiem = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1366, 760));

        tableLichLamViec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã lịch hẹn", "Thời gian hẹn", "Mã bệnh nhân", "Mã nha sĩ", "Phòng khám", "Tình trạng"
            }
        ));
        tableLichLamViec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableLichLamViecMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableLichLamViec);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel1.setText("Mã lịch làm việc:");

        jLabel2.setText("Ngày làm việc:");

        jLabel3.setText("Mã nha sĩ:");

        jLabel4.setText("Trạng thái:");

        cboSanSang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Có thể khám", "Không thể khám" }));

        cboMaNhaSi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Khác" }));

        comboBoxTimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã lịch làm việc", "Mã nha sĩ", "Ngày làm việc", "Tình trạng" }));

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboMaNhaSi, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaLichLamViec, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboSanSang, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateChooserNgayLamViec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(111, 111, 111)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThem)
                    .addComponent(btnXoa))
                .addGap(151, 151, 151))
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comboBoxTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtMaLichLamViec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cboMaNhaSi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(117, 117, 117))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(btnThem))
                            .addComponent(dateChooserNgayLamViec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(cboSanSang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnXoa))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiem)
                            .addComponent(comboBoxTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(106, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        String ngayLamViec = dateChooserNgayLamViec.getDate().toString();
        SimpleDateFormat dateFormat = new SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy");
        Date date;
        try {
            date = dateFormat.parse(ngayLamViec);
        } catch (ParseException e) {
            e.printStackTrace();
            return; // Xử lý lỗi nếu có thể
        }

// Chuyển đổi thành java.sql.Date
        java.sql.Date sqlDate = new java.sql.Date(date.getTime());
        String maNhaSi = (String) cboMaNhaSi.getSelectedItem();
        String tinhTrang = cboSanSang.getSelectedItem().toString();
        
        LichLamViecDTO lichLamViec = new LichLamViecDTO(maNhaSi, sqlDate, tinhTrang);

        if (LichLamViecBUS.themLichLamViec(lichLamViec)) {
            JOptionPane.showMessageDialog(this, "Thêm lịch làm việc thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            loadDataToTable();
        } else {
            JOptionPane.showMessageDialog(this, "Thêm lịch làm việc thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int selectedRow = tableLichLamViec.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn lịch hẹn cần xóa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableLichLamViec.getModel();
        String maLichHen = model.getValueAt(selectedRow, 0).toString();

        int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa lịch làm việc này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            boolean isXoaLichHenSuccess = LichLamViecBUS.xoaLichLamViec(Integer.parseInt(maLichHen));

            if (isXoaLichHenSuccess) {
                model.removeRow(selectedRow);
                JOptionPane.showMessageDialog(this, "Xóa lịch làm việc thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                loadDataToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa lịch làm việc thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed
    
    private void tableLichLamViecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableLichLamViecMouseClicked
      int selectedRow = tableLichLamViec.getSelectedRow();

        if (selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel) tableLichLamViec.getModel();
            String maLichHen = model.getValueAt(selectedRow, 0).toString();
            Date thoiGianHen = (Date) model.getValueAt(selectedRow, 2);
            String maBenhNhan = model.getValueAt(selectedRow, 1).toString();
            String maNhaSi = model.getValueAt(selectedRow, 3).toString();

            txtMaLichLamViec.setText(maLichHen);
            dateChooserNgayLamViec.setDate(thoiGianHen);
            cboMaNhaSi.setSelectedItem(maBenhNhan);
            cboMaNhaSi.setSelectedItem(maNhaSi);
            cboSanSang.setSelectedItem(maNhaSi);
        }
    }//GEN-LAST:event_tableLichLamViecMouseClicked

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        String searchKeyword = txtTimKiem.getText();
        int selectedCriteriaIndex = comboBoxTimKiem.getSelectedIndex();

        RowFilter<DefaultTableModel, Object> rowFilter = null;

        // Apply the filter based on the selected search criteria
        switch (selectedCriteriaIndex) {
            case 0: // Mã thuốc
            rowFilter = RowFilter.regexFilter("(?i)" + searchKeyword, 0); // Apply filter to the first column (index 0)
            break;
            case 1: // Tên thuốc
            rowFilter = RowFilter.regexFilter("(?i)" + searchKeyword, 1); // Apply filter to the second column (index 1)
            break;
            case 2: // Đơn vị tính
            rowFilter = RowFilter.regexFilter("(?i)" + searchKeyword, 2); // Apply filter to the third column (index 2)
            break;
            case 3: // Đơn giá
            rowFilter = RowFilter.regexFilter("(?i)" + searchKeyword, 3); // Apply filter to the fourth column (index 3)
            break;

        }

        // Apply the filter to the row sorter
        tableRowSorter.setRowFilter(rowFilter);
    }//GEN-LAST:event_btnTimKiemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboMaNhaSi;
    private javax.swing.JComboBox<String> cboSanSang;
    private javax.swing.JComboBox<String> comboBoxTimKiem;
    private com.toedter.calendar.JDateChooser dateChooserNgayLamViec;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableLichLamViec;
    private javax.swing.JTextField txtMaLichLamViec;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
